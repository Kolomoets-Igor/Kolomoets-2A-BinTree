/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package BinTree;

 class BinaryTreeNode {
    int val;
    BinaryTreeNode left;
    BinaryTreeNode right;

    BinaryTreeNode(int val) {
        this.val = val;
        this.left = null;
        this.right = null;
    }
}

public class BinaryTree {
    BinaryTreeNode root;

    BinaryTree(int val) {
        this.root = new BinaryTreeNode(val);
    }

    void insert(int val) {
        insertNode(this.root, val);
    }

    private BinaryTreeNode insertNode(BinaryTreeNode current, int val) {
        if (current == null) {
            return new BinaryTreeNode(val);
        }

        if (val < current.val) {
            current.left = insertNode(current.left, val);
        } else if (val > current.val) {
            current.right = insertNode(current.right, val);
        } else {
            // value already exists
            return current;
        }

        return current;
    }

    void inorderTraversal(BinaryTreeNode node) {
        if (node != null) {
            inorderTraversal(node.left);
            System.out.print(node.val + " ");
            inorderTraversal(node.right);
        }
    }

    public static void main(String[] args) {
        BinaryTree bt = new BinaryTree(5);
        bt.insert(3);
        bt.insert(9);
        bt.insert(2);
        bt.insert(7);

        System.out.print("Inorder traversal: ");
        bt.inorderTraversal(bt.root);
    }
}
